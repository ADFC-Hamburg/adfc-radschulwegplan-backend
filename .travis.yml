# Project language
language: php

# Allows use container-based infrastructure
sudo: false

# Start mysql service
services:
  - postgresql

# Cache composer packages so "composer install" is faster
cache:
  directories:
    - $HOME/.composer/cache/files

# Matrix to test in every php version
matrix:
  # Fast finish allows to set the build as "finished" even if the "allow_failures" matrix elements are not finished yet.
  fast_finish: true
  include:
    - php: 7.0
    - php: hhvm
  allow_failures:
    - php: hhvm

# Define an environment variable
env:
  - SYMFONY_VERSION="3.4.*" DB=postgres


before_install:
  # Update Composer
  - composer self-update
  # Create DB
  - sudo apt-get install postgis
  - psql -c "CREATE USER foo WITH PASSWORD 'bar';" -U postgres
  - psql -c 'create database travis_postgis;' -U postgres
  - psql -c 'CREATE EXTENSION postgis;' -U postgres -d travis_postgis
  - psql -c 'CREATE EXTENSION postgis_topology;' -U postgres -d travis_postgis
  - psql -c 'GRANT ALL PRIVILEGES ON DATABASE travis_postgis to foo;' -U postgres -d travis_postgis


# Install composer dependencies,
# Create database, schema and fixtures
install:
  - composer install
  - cp app/config/parameters.yml.dist app/config/parameters.yml
  - php bin/console doctrine:database:create --env=test --if-not-exists
  - php bin/console doctrine:schema:create --env=test
  - php bin/console doctrine:fixtures:load -n --env=test

# Run script
script:
  - phpunit

